import json
import re

def filter_jsonl_by_images(jsonl1_path, jsonl2_path):
    """
    根据第一个 jsonl 文件里的 images 列表（只有一个元素）提取 screenshot_数字 作为 key，
    然后过滤第二个 jsonl 文件，只保留 image_path 中包含这些 key 的行，并直接覆盖原文件。

    :param jsonl1_path: 第一个 jsonl 文件路径
    :param jsonl2_path: 第二个 jsonl 文件路径（会被原地修改）
    """

    # 1. 从第一个 jsonl 提取 screenshot_数字 部分
    keys_set = set()
    pattern = re.compile(r"(screenshot_\d+)_\d+\.png")

    with open(jsonl1_path, "r", encoding="utf-8") as f1:
        for line in f1:
            if not line.strip():
                continue
            obj = json.loads(line)
            if "images" in obj and obj["images"]:
                match = pattern.match(obj["images"][0])
                if match:
                    keys_set.add(match.group(1))

    print(f"✅ 从 {jsonl1_path} 提取到 {len(keys_set)} 个唯一 key")

    # 2. 过滤第二个 jsonl
    filtered_lines = []
    with open(jsonl2_path, "r", encoding="utf-8") as f2:
        for line in f2:
            if not line.strip():
                continue
            obj = json.loads(line)
            image_path = obj.get("image_path", "")
            match = pattern.match(image_path)
            if match and match.group(1) in keys_set:
                filtered_lines.append(json.dumps(obj, ensure_ascii=False))

    print(f"✅ {jsonl2_path} 中保留 {len(filtered_lines)} 行")

    # 3. 覆盖写回第二个文件
    with open(jsonl2_path, "w", encoding="utf-8") as f2:
        for line in filtered_lines:
            f2.write(line + "\n")

    print("🎯 处理完成！")


# 使用示例
# filter_jsonl_by_images("file1.jsonl", "file2.jsonl")
